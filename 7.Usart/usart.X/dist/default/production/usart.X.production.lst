

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 19:01:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _RCREG	set	4014
    57  0000                     _PIR1bits	set	3998
    58  0000                     _TXREG	set	4013
    59  0000                     _PIE1bits	set	3997
    60  0000                     _INTCONbits	set	4082
    61  0000                     _RCSTAbits	set	4011
    62  0000                     _TXSTAbits	set	4012
    63  0000                     _SPBRG	set	4015
    64  0000                     _ADCON1	set	4033
    65                           
    66                           	psect	smallconst
    67  000800                     __psmallconst:
    68                           	callstack 0
    69  000800  00                 	db	0
    70  000801                     STR_1:
    71  000801  43                 	db	67	;'C'
    72  000802  41                 	db	65	;'A'
    73  000803  52                 	db	82	;'R'
    74  000804  41                 	db	65	;'A'
    75  000805  43                 	db	67	;'C'
    76  000806  54                 	db	84	;'T'
    77  000807  45                 	db	69	;'E'
    78  000808  52                 	db	82	;'R'
    79  000809  20                 	db	32
    80  00080A  41                 	db	65	;'A'
    81  00080B  20                 	db	32
    82  00080C  0D                 	db	13
    83  00080D  00                 	db	0
    84  00080E                     STR_2:
    85  00080E  43                 	db	67	;'C'
    86  00080F  41                 	db	65	;'A'
    87  000810  52                 	db	82	;'R'
    88  000811  41                 	db	65	;'A'
    89  000812  43                 	db	67	;'C'
    90  000813  54                 	db	84	;'T'
    91  000814  45                 	db	69	;'E'
    92  000815  52                 	db	82	;'R'
    93  000816  20                 	db	32
    94  000817  42                 	db	66	;'B'
    95  000818  20                 	db	32
    96  000819  0D                 	db	13
    97  00081A  00                 	db	0
    98  00081B  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  0009E4                     __pcinit:
   104                           	callstack 0
   105  0009E4                     start_initialization:
   106                           	callstack 0
   107  0009E4                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (1 bytes)
   111  0009E4  6A12               	clrf	__pbssCOMRAM& (0+255),c
   112  0009E6                     end_of_initialization:
   113                           	callstack 0
   114  0009E6                     __end_of__initialization:
   115                           	callstack 0
   116  0009E6  9013               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   117  0009E8  9213               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   118  0009EA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   119  0009EC  6EF8               	movwf	tblptru,c
   120  0009EE  0E08               	movlw	high __Lsmallconst
   121  0009F0  6EF7               	movwf	tblptrh,c
   122  0009F2  0100               	movlb	0
   123  0009F4  EF60  F004         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126  000012                     __pbssCOMRAM:
   127                           	callstack 0
   128  000012                     _caracter:
   129                           	callstack 0
   130  000012                     	ds	1
   131                           
   132                           	psect	cstackCOMRAM
   133  000001                     __pcstackCOMRAM:
   134                           	callstack 0
   135  000001                     ?___lldiv:
   136                           	callstack 0
   137  000001                     USART_PutChar@Ch:
   138                           	callstack 0
   139  000001                     ___lldiv@dividend:
   140                           	callstack 0
   141                           
   142                           ; 4 bytes @ 0x0
   143  000001                     	ds	1
   144  000002                     USART_PutString@str:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x1
   148  000002                     	ds	2
   149  000004                     
   150                           ; 1 bytes @ 0x3
   151  000004                     	ds	1
   152  000005                     ___lldiv@divisor:
   153                           	callstack 0
   154                           
   155                           ; 4 bytes @ 0x4
   156  000005                     	ds	4
   157  000009                     ___lldiv@quotient:
   158                           	callstack 0
   159                           
   160                           ; 4 bytes @ 0x8
   161  000009                     	ds	4
   162  00000D                     ___lldiv@counter:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0xC
   166  00000D                     	ds	1
   167  00000E                     USART_init@baudrate:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0xD
   171  00000E                     	ds	2
   172  000010                     ??_main:
   173                           
   174                           ; 1 bytes @ 0xF
   175  000010                     	ds	2
   176                           
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 23 in file "main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   196 ;;      Params:         0       0       0       0       0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0
   198 ;;      Temps:          2       0       0       0       0       0       0       0       0
   199 ;;      Totals:         2       0       0       0       0       0       0       0       0
   200 ;;Total ram usage:        2 bytes
   201 ;; Hardware stack levels required when called: 3
   202 ;; This function calls:
   203 ;;		_USART_PutString
   204 ;;		_USART_init
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text0
   211  0008C0                     __ptext0:
   212                           	callstack 0
   213  0008C0                     _main:
   214                           	callstack 28
   215  0008C0                     
   216                           ;main.c: 25:     ADCON1 = 0x0F;
   217  0008C0  0E0F               	movlw	15
   218  0008C2  6EC1               	movwf	193,c	;volatile
   219  0008C4                     
   220                           ;main.c: 27:     USART_init(9600);
   221  0008C4  0E25               	movlw	37
   222  0008C6  6E0F               	movwf	(USART_init@baudrate+1)^0,c
   223  0008C8  0E80               	movlw	128
   224  0008CA  6E0E               	movwf	USART_init@baudrate^0,c
   225  0008CC  EC97  F004         	call	_USART_init	;wreg free
   226  0008D0                     l864:
   227                           
   228                           ;main.c: 32:         if(caracter=='A'){
   229  0008D0  0E41               	movlw	65
   230  0008D2  1812               	xorwf	_caracter^0,w,c	;volatile
   231  0008D4  A4D8               	btfss	status,2,c
   232  0008D6  EF6F  F004         	goto	u151
   233  0008DA  EF71  F004         	goto	u150
   234  0008DE                     u151:
   235  0008DE  EF79  F004         	goto	l868
   236  0008E2                     u150:
   237  0008E2                     
   238                           ;main.c: 33:             USART_PutString("CARACTER A \r");
   239  0008E2  0E01               	movlw	low STR_1
   240  0008E4  6E02               	movwf	USART_PutString@str^0,c
   241  0008E6  0E08               	movlw	high STR_1
   242  0008E8  6E03               	movwf	(USART_PutString@str+1)^0,c
   243  0008EA  ECBF  F004         	call	_USART_PutString	;wreg free
   244                           
   245                           ;main.c: 35:         }else if(caracter == 'B'){
   246  0008EE  EF88  F004         	goto	l872
   247  0008F2                     l868:
   248  0008F2  0E42               	movlw	66
   249  0008F4  1812               	xorwf	_caracter^0,w,c	;volatile
   250  0008F6  A4D8               	btfss	status,2,c
   251  0008F8  EF80  F004         	goto	u161
   252  0008FC  EF82  F004         	goto	u160
   253  000900                     u161:
   254  000900  EF88  F004         	goto	l872
   255  000904                     u160:
   256  000904                     
   257                           ;main.c: 36:             USART_PutString("CARACTER B \r");
   258  000904  0E0E               	movlw	low STR_2
   259  000906  6E02               	movwf	USART_PutString@str^0,c
   260  000908  0E08               	movlw	high STR_2
   261  00090A  6E03               	movwf	(USART_PutString@str+1)^0,c
   262  00090C  ECBF  F004         	call	_USART_PutString	;wreg free
   263  000910                     l872:
   264                           
   265                           ;main.c: 39:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   266  000910  0E06               	movlw	6
   267  000912  6E11               	movwf	(??_main+1)^0,c
   268  000914  0E13               	movlw	19
   269  000916  6E10               	movwf	??_main^0,c
   270  000918  0EAE               	movlw	174
   271  00091A                     u177:
   272  00091A  2EE8               	decfsz	wreg,f,c
   273  00091C  D7FE               	bra	u177
   274  00091E  2E10               	decfsz	??_main^0,f,c
   275  000920  D7FC               	bra	u177
   276  000922  2E11               	decfsz	(??_main+1)^0,f,c
   277  000924  D7FA               	bra	u177
   278  000926  EF68  F004         	goto	l864
   279  00092A  EF07  F000         	goto	start
   280  00092E                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function _USART_init *****************
   284 ;; Defined at:
   285 ;;		line 48 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  baudrate        2   13[COMRAM] unsigned short 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   299 ;;      Params:         2       0       0       0       0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0       0       0
   302 ;;      Totals:         2       0       0       0       0       0       0       0       0
   303 ;;Total ram usage:        2 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; Hardware stack levels required when called: 2
   306 ;; This function calls:
   307 ;;		___lldiv
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text1
   314  00092E                     __ptext1:
   315                           	callstack 0
   316  00092E                     _USART_init:
   317                           	callstack 28
   318  00092E                     
   319                           ;main.c: 51:     SPBRG = (unsigned char)(((8000000UL/baudrate)/64)-1);
   320  00092E  0E00               	movlw	0
   321  000930  6E01               	movwf	___lldiv@dividend^0,c
   322  000932  0E12               	movlw	18
   323  000934  6E02               	movwf	(___lldiv@dividend+1)^0,c
   324  000936  0E7A               	movlw	122
   325  000938  6E03               	movwf	(___lldiv@dividend+2)^0,c
   326  00093A  0E00               	movlw	0
   327  00093C  6E04               	movwf	(___lldiv@dividend+3)^0,c
   328  00093E  C00E  F005         	movff	USART_init@baudrate,___lldiv@divisor
   329  000942  C00F  F006         	movff	USART_init@baudrate+1,___lldiv@divisor+1
   330  000946  6A07               	clrf	(___lldiv@divisor+2)^0,c
   331  000948  6A08               	clrf	(___lldiv@divisor+3)^0,c
   332  00094A  EC0E  F004         	call	___lldiv	;wreg free
   333  00094E  0E07               	movlw	7
   334  000950  EFAF  F004         	goto	u130
   335  000954                     u135:
   336  000954  90D8               	bcf	status,0,c
   337  000956  3204               	rrcf	(?___lldiv+3)^0,f,c
   338  000958  3203               	rrcf	(?___lldiv+2)^0,f,c
   339  00095A  3202               	rrcf	(?___lldiv+1)^0,f,c
   340  00095C  3201               	rrcf	?___lldiv^0,f,c
   341  00095E                     u130:
   342  00095E  2EE8               	decfsz	wreg,f,c
   343  000960  EFAA  F004         	goto	u135
   344  000964  0401               	decf	?___lldiv^0,w,c
   345  000966  6EAF               	movwf	175,c	;volatile
   346  000968                     
   347                           ;main.c: 53:     TXSTAbits.BRGH = 0;
   348  000968  94AC               	bcf	172,2,c	;volatile
   349  00096A                     
   350                           ;main.c: 54:     TXSTAbits.SYNC = 0;
   351  00096A  98AC               	bcf	172,4,c	;volatile
   352  00096C                     
   353                           ;main.c: 55:     RCSTAbits.SPEN = 1;
   354  00096C  8EAB               	bsf	171,7,c	;volatile
   355  00096E                     
   356                           ;main.c: 57:     TXSTAbits.TX9 = 0;
   357  00096E  9CAC               	bcf	172,6,c	;volatile
   358  000970                     
   359                           ;main.c: 58:     TXSTAbits.TXEN = 1;
   360  000970  8AAC               	bsf	172,5,c	;volatile
   361  000972                     
   362                           ;main.c: 59:     RCSTAbits.RC9 = 0;
   363  000972  9CAB               	bcf	171,6,c	;volatile
   364  000974                     
   365                           ;main.c: 60:     RCSTAbits.CREN = 1;
   366  000974  88AB               	bsf	171,4,c	;volatile
   367  000976                     
   368                           ;main.c: 62:     INTCONbits.GIE=1;
   369  000976  8EF2               	bsf	242,7,c	;volatile
   370  000978                     
   371                           ;main.c: 63:     INTCONbits.PEIE=1;
   372  000978  8CF2               	bsf	242,6,c	;volatile
   373  00097A                     
   374                           ;main.c: 64:     PIE1bits.RCIE=1;
   375  00097A  8A9D               	bsf	157,5,c	;volatile
   376  00097C  0012               	return		;funcret
   377  00097E                     __end_of_USART_init:
   378                           	callstack 0
   379                           
   380 ;; *************** function ___lldiv *****************
   381 ;; Defined at:
   382 ;;		line 7 in file "E:\MPLAB\pic\sources\c99\common\__lldiv.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  dividend        4    0[COMRAM] unsigned long 
   385 ;;  divisor         4    4[COMRAM] unsigned long 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  quotient        4    8[COMRAM] unsigned long 
   388 ;;  counter         1   12[COMRAM] unsigned char 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  4    0[COMRAM] unsigned long 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         8       0       0       0       0       0       0       0       0
   399 ;;      Locals:         5       0       0       0       0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0
   401 ;;      Totals:        13       0       0       0       0       0       0       0       0
   402 ;;Total ram usage:       13 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; Hardware stack levels required when called: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_USART_init
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413  00081C                     __ptext2:
   414                           	callstack 0
   415  00081C                     ___lldiv:
   416                           	callstack 28
   417  00081C  0E00               	movlw	0
   418  00081E  6E09               	movwf	___lldiv@quotient^0,c
   419  000820  0E00               	movlw	0
   420  000822  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   421  000824  0E00               	movlw	0
   422  000826  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   423  000828  0E00               	movlw	0
   424  00082A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   425  00082C  5005               	movf	___lldiv@divisor^0,w,c
   426  00082E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   427  000830  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   428  000832  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   429  000834  B4D8               	btfsc	status,2,c
   430  000836  EF1F  F004         	goto	u101
   431  00083A  EF21  F004         	goto	u100
   432  00083E                     u101:
   433  00083E  EF57  F004         	goto	l88
   434  000842                     u100:
   435  000842  0E01               	movlw	1
   436  000844  6E0D               	movwf	___lldiv@counter^0,c
   437  000846  EF2B  F004         	goto	l816
   438  00084A                     l814:
   439  00084A  90D8               	bcf	status,0,c
   440  00084C  3605               	rlcf	___lldiv@divisor^0,f,c
   441  00084E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   442  000850  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   443  000852  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   444  000854  2A0D               	incf	___lldiv@counter^0,f,c
   445  000856                     l816:
   446  000856  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   447  000858  EF30  F004         	goto	u111
   448  00085C  EF32  F004         	goto	u110
   449  000860                     u111:
   450  000860  EF25  F004         	goto	l814
   451  000864                     u110:
   452  000864                     l818:
   453  000864  90D8               	bcf	status,0,c
   454  000866  3609               	rlcf	___lldiv@quotient^0,f,c
   455  000868  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   456  00086A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   457  00086C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   458  00086E  5005               	movf	___lldiv@divisor^0,w,c
   459  000870  5C01               	subwf	___lldiv@dividend^0,w,c
   460  000872  5006               	movf	(___lldiv@divisor+1)^0,w,c
   461  000874  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   462  000876  5007               	movf	(___lldiv@divisor+2)^0,w,c
   463  000878  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   464  00087A  5008               	movf	(___lldiv@divisor+3)^0,w,c
   465  00087C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   466  00087E  A0D8               	btfss	status,0,c
   467  000880  EF44  F004         	goto	u121
   468  000884  EF46  F004         	goto	u120
   469  000888                     u121:
   470  000888  EF4F  F004         	goto	l826
   471  00088C                     u120:
   472  00088C  5005               	movf	___lldiv@divisor^0,w,c
   473  00088E  5E01               	subwf	___lldiv@dividend^0,f,c
   474  000890  5006               	movf	(___lldiv@divisor+1)^0,w,c
   475  000892  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   476  000894  5007               	movf	(___lldiv@divisor+2)^0,w,c
   477  000896  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   478  000898  5008               	movf	(___lldiv@divisor+3)^0,w,c
   479  00089A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   480  00089C  8009               	bsf	___lldiv@quotient^0,0,c
   481  00089E                     l826:
   482  00089E  90D8               	bcf	status,0,c
   483  0008A0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   484  0008A2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   485  0008A4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   486  0008A6  3205               	rrcf	___lldiv@divisor^0,f,c
   487  0008A8  2E0D               	decfsz	___lldiv@counter^0,f,c
   488  0008AA  EF32  F004         	goto	l818
   489  0008AE                     l88:
   490  0008AE  C009  F001         	movff	___lldiv@quotient,?___lldiv
   491  0008B2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   492  0008B6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   493  0008BA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   494  0008BE  0012               	return		;funcret
   495  0008C0                     __end_of___lldiv:
   496                           	callstack 0
   497                           
   498 ;; *************** function _USART_PutString *****************
   499 ;; Defined at:
   500 ;;		line 73 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  str             2    1[COMRAM] PTR unsigned char 
   503 ;;		 -> STR_2(13), STR_1(13), 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   515 ;;      Params:         2       0       0       0       0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0       0       0
   518 ;;      Totals:         2       0       0       0       0       0       0       0       0
   519 ;;Total ram usage:        2 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; Hardware stack levels required when called: 2
   522 ;; This function calls:
   523 ;;		_USART_PutChar
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text3
   530  00097E                     __ptext3:
   531                           	callstack 0
   532  00097E                     _USART_PutString:
   533                           	callstack 28
   534  00097E                     
   535                           ;main.c: 75:     while (*str)
   536  00097E  EFCB  F004         	goto	l858
   537  000982                     l854:
   538                           
   539                           ;main.c: 76:         USART_PutChar(*str++);
   540  000982  C002  FFF6         	movff	USART_PutString@str,tblptrl
   541  000986  C003  FFF7         	movff	USART_PutString@str+1,tblptrh
   542  00098A                     	if	0	;tblptru may be non-zero
   543  00098A                     	endif
   544  00098A                     	if	0	;tblptru may be non-zero
   545  00098A                     	endif
   546  00098A  0008               	tblrd		*
   547  00098C  50F5               	movf	tablat,w,c
   548  00098E  ECE7  F004         	call	_USART_PutChar
   549  000992  4A02               	infsnz	USART_PutString@str^0,f,c
   550  000994  2A03               	incf	(USART_PutString@str+1)^0,f,c
   551  000996                     l858:
   552                           
   553                           ;main.c: 75:     while (*str)
   554  000996  C002  FFF6         	movff	USART_PutString@str,tblptrl
   555  00099A  C003  FFF7         	movff	USART_PutString@str+1,tblptrh
   556  00099E                     	if	0	;tblptru may be non-zero
   557  00099E                     	endif
   558  00099E                     	if	0	;tblptru may be non-zero
   559  00099E                     	endif
   560  00099E  0008               	tblrd		*
   561  0009A0  50F5               	movf	tablat,w,c
   562  0009A2  0900               	iorlw	0
   563  0009A4  A4D8               	btfss	status,2,c
   564  0009A6  EFD7  F004         	goto	u141
   565  0009AA  EFD9  F004         	goto	u140
   566  0009AE                     u141:
   567  0009AE  EFC1  F004         	goto	l854
   568  0009B2                     u140:
   569  0009B2  0012               	return		;funcret
   570  0009B4                     __end_of_USART_PutString:
   571                           	callstack 0
   572                           
   573 ;; *************** function _USART_PutChar *****************
   574 ;; Defined at:
   575 ;;		line 67 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  Ch              1    wreg     unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  Ch              1    0[COMRAM] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   589 ;;      Params:         0       0       0       0       0       0       0       0       0
   590 ;;      Locals:         1       0       0       0       0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0
   592 ;;      Totals:         1       0       0       0       0       0       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_USART_PutString
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text4
   604  0009CE                     __ptext4:
   605                           	callstack 0
   606  0009CE                     _USART_PutChar:
   607                           	callstack 28
   608                           
   609                           ;incstack = 0
   610                           ;USART_PutChar@Ch stored from wreg
   611  0009CE  6E01               	movwf	USART_PutChar@Ch^0,c
   612  0009D0                     l43:
   613  0009D0  A2AC               	btfss	172,1,c	;volatile
   614  0009D2  EFED  F004         	goto	u11
   615  0009D6  EFEF  F004         	goto	u10
   616  0009DA                     u11:
   617  0009DA  EFE8  F004         	goto	l43
   618  0009DE                     u10:
   619  0009DE                     
   620                           ;main.c: 69:     TXREG =Ch;
   621  0009DE  C001  FFAD         	movff	USART_PutChar@Ch,4013	;volatile
   622  0009E2  0012               	return		;funcret
   623  0009E4                     __end_of_USART_PutChar:
   624                           	callstack 0
   625                           
   626 ;; *************** function _ISR *****************
   627 ;; Defined at:
   628 ;;		line 80 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		None
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         0       0       0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		Interrupt level 2
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	intcode
   656  000008                     __pintcode:
   657                           	callstack 0
   658  000008                     _ISR:
   659                           	callstack 28
   660                           
   661                           ;incstack = 0
   662  000008  8213               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   663  00000A  EDDA  F004         	call	int_func,f	;refresh shadow registers
   664                           
   665                           	psect	intcode_body
   666  0009B4                     __pintcode_body:
   667                           	callstack 28
   668  0009B4                     int_func:
   669                           	callstack 28
   670  0009B4  0006               	pop		; remove dummy address from shadow register refresh
   671  0009B6                     
   672                           ;main.c: 83:     if(PIR1bits.RC1IF == 1){
   673  0009B6  AA9E               	btfss	158,5,c	;volatile
   674  0009B8  EFE0  F004         	goto	i2u9_41
   675  0009BC  EFE2  F004         	goto	i2u9_40
   676  0009C0                     i2u9_41:
   677  0009C0  EFE5  F004         	goto	i2l58
   678  0009C4                     i2u9_40:
   679  0009C4                     
   680                           ;main.c: 85:         caracter = RCREG;
   681  0009C4  CFAE F012          	movff	4014,_caracter	;volatile
   682                           
   683                           ;main.c: 87:         PIR1bits.RC1IF = 0;
   684  0009C8  9A9E               	bcf	158,5,c	;volatile
   685  0009CA                     i2l58:
   686  0009CA  9213               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   687  0009CC  0011               	retfie		f
   688  0009CE                     __end_of_ISR:
   689                           	callstack 0
   690                           
   691                           	psect	rparam
   692  0000                     
   693                           	psect	temp
   694  000013                     btemp:
   695                           	callstack 0
   696  000013                     	ds	1
   697  0000                     int$flags	set	btemp
   698  0000                     wtemp8	set	btemp+1
   699  0000                     ttemp5	set	btemp+1
   700  0000                     ttemp6	set	btemp+4
   701  0000                     ttemp7	set	btemp+8
   702                           
   703                           	psect	idloc
   704                           
   705                           ;Config register IDLOC0 @ 0x200000
   706                           ;	unspecified, using default values
   707  200000                     	org	2097152
   708  200000  FF                 	db	255
   709                           
   710                           ;Config register IDLOC1 @ 0x200001
   711                           ;	unspecified, using default values
   712  200001                     	org	2097153
   713  200001  FF                 	db	255
   714                           
   715                           ;Config register IDLOC2 @ 0x200002
   716                           ;	unspecified, using default values
   717  200002                     	org	2097154
   718  200002  FF                 	db	255
   719                           
   720                           ;Config register IDLOC3 @ 0x200003
   721                           ;	unspecified, using default values
   722  200003                     	org	2097155
   723  200003  FF                 	db	255
   724                           
   725                           ;Config register IDLOC4 @ 0x200004
   726                           ;	unspecified, using default values
   727  200004                     	org	2097156
   728  200004  FF                 	db	255
   729                           
   730                           ;Config register IDLOC5 @ 0x200005
   731                           ;	unspecified, using default values
   732  200005                     	org	2097157
   733  200005  FF                 	db	255
   734                           
   735                           ;Config register IDLOC6 @ 0x200006
   736                           ;	unspecified, using default values
   737  200006                     	org	2097158
   738  200006  FF                 	db	255
   739                           
   740                           ;Config register IDLOC7 @ 0x200007
   741                           ;	unspecified, using default values
   742  200007                     	org	2097159
   743  200007  FF                 	db	255
   744                           
   745                           	psect	config
   746                           
   747                           ;Config register CONFIG1L @ 0x300000
   748                           ;	PLL Prescaler Selection bits
   749                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   750                           ;	System Clock Postscaler Selection bits
   751                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   752                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   753                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   754  300000                     	org	3145728
   755  300000  00                 	db	0
   756                           
   757                           ;Config register CONFIG1H @ 0x300001
   758                           ;	Oscillator Selection bits
   759                           ;	FOSC = HS, HS oscillator (HS)
   760                           ;	Fail-Safe Clock Monitor Enable bit
   761                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   762                           ;	Internal/External Oscillator Switchover bit
   763                           ;	IESO = OFF, Oscillator Switchover mode disabled
   764  300001                     	org	3145729
   765  300001  0C                 	db	12
   766                           
   767                           ;Config register CONFIG2L @ 0x300002
   768                           ;	Power-up Timer Enable bit
   769                           ;	PWRT = OFF, PWRT disabled
   770                           ;	Brown-out Reset Enable bits
   771                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   772                           ;	Brown-out Reset Voltage bits
   773                           ;	BORV = 3, Minimum setting 2.05V
   774                           ;	USB Voltage Regulator Enable bit
   775                           ;	VREGEN = OFF, USB voltage regulator disabled
   776  300002                     	org	3145730
   777  300002  19                 	db	25
   778                           
   779                           ;Config register CONFIG2H @ 0x300003
   780                           ;	Watchdog Timer Enable bit
   781                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   782                           ;	Watchdog Timer Postscale Select bits
   783                           ;	WDTPS = 32768, 1:32768
   784  300003                     	org	3145731
   785  300003  1E                 	db	30
   786                           
   787                           ; Padding undefined space
   788  300004                     	org	3145732
   789  300004  FF                 	db	255
   790                           
   791                           ;Config register CONFIG3H @ 0x300005
   792                           ;	CCP2 MUX bit
   793                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   794                           ;	PORTB A/D Enable bit
   795                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   796                           ;	Low-Power Timer 1 Oscillator Enable bit
   797                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   798                           ;	MCLR Pin Enable bit
   799                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   800  300005                     	org	3145733
   801  300005  83                 	db	131
   802                           
   803                           ;Config register CONFIG4L @ 0x300006
   804                           ;	Stack Full/Underflow Reset Enable bit
   805                           ;	STVREN = ON, Stack full/underflow will cause Reset
   806                           ;	Single-Supply ICSP Enable bit
   807                           ;	LVP = ON, Single-Supply ICSP enabled
   808                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   809                           ;	ICPRT = OFF, ICPORT disabled
   810                           ;	Extended Instruction Set Enable bit
   811                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   812                           ;	Background Debugger Enable bit
   813                           ;	DEBUG = 0x1, unprogrammed default
   814  300006                     	org	3145734
   815  300006  85                 	db	133
   816                           
   817                           ; Padding undefined space
   818  300007                     	org	3145735
   819  300007  FF                 	db	255
   820                           
   821                           ;Config register CONFIG5L @ 0x300008
   822                           ;	Code Protection bit
   823                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   824                           ;	Code Protection bit
   825                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   826                           ;	Code Protection bit
   827                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   828                           ;	Code Protection bit
   829                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   830  300008                     	org	3145736
   831  300008  0F                 	db	15
   832                           
   833                           ;Config register CONFIG5H @ 0x300009
   834                           ;	Boot Block Code Protection bit
   835                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   836                           ;	Data EEPROM Code Protection bit
   837                           ;	CPD = OFF, Data EEPROM is not code-protected
   838  300009                     	org	3145737
   839  300009  C0                 	db	192
   840                           
   841                           ;Config register CONFIG6L @ 0x30000A
   842                           ;	Write Protection bit
   843                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   844                           ;	Write Protection bit
   845                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   846                           ;	Write Protection bit
   847                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   848                           ;	Write Protection bit
   849                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   850  30000A                     	org	3145738
   851  30000A  0F                 	db	15
   852                           
   853                           ;Config register CONFIG6H @ 0x30000B
   854                           ;	Configuration Register Write Protection bit
   855                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   856                           ;	Boot Block Write Protection bit
   857                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   858                           ;	Data EEPROM Write Protection bit
   859                           ;	WRTD = OFF, Data EEPROM is not write-protected
   860  30000B                     	org	3145739
   861  30000B  E0                 	db	224
   862                           
   863                           ;Config register CONFIG7L @ 0x30000C
   864                           ;	Table Read Protection bit
   865                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   866                           ;	Table Read Protection bit
   867                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   868                           ;	Table Read Protection bit
   869                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   870                           ;	Table Read Protection bit
   871                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   872  30000C                     	org	3145740
   873  30000C  0F                 	db	15
   874                           
   875                           ;Config register CONFIG7H @ 0x30000D
   876                           ;	Boot Block Table Read Protection bit
   877                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   878  30000D                     	org	3145741
   879  30000D  40                 	db	64
   880                           tosu	equ	0xFFF
   881                           tosh	equ	0xFFE
   882                           tosl	equ	0xFFD
   883                           stkptr	equ	0xFFC
   884                           pclatu	equ	0xFFB
   885                           pclath	equ	0xFFA
   886                           pcl	equ	0xFF9
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           prodh	equ	0xFF4
   892                           prodl	equ	0xFF3
   893                           indf0	equ	0xFEF
   894                           postinc0	equ	0xFEE
   895                           postdec0	equ	0xFED
   896                           preinc0	equ	0xFEC
   897                           plusw0	equ	0xFEB
   898                           fsr0h	equ	0xFEA
   899                           fsr0l	equ	0xFE9
   900                           wreg	equ	0xFE8
   901                           indf1	equ	0xFE7
   902                           postinc1	equ	0xFE6
   903                           postdec1	equ	0xFE5
   904                           preinc1	equ	0xFE4
   905                           plusw1	equ	0xFE3
   906                           fsr1h	equ	0xFE2
   907                           fsr1l	equ	0xFE1
   908                           bsr	equ	0xFE0
   909                           indf2	equ	0xFDF
   910                           postinc2	equ	0xFDE
   911                           postdec2	equ	0xFDD
   912                           preinc2	equ	0xFDC
   913                           plusw2	equ	0xFDB
   914                           fsr2h	equ	0xFDA
   915                           fsr2l	equ	0xFD9
   916                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_PutString@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_USART_init
    _USART_init->___lldiv
    _USART_PutString->_USART_PutChar

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     624
                                             15 COMRAM     2     2      0
                    _USART_PutString
                         _USART_init
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           2     0      2     412
                                             13 COMRAM     2     0      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _USART_PutString                                      2     0      2     212
                                              1 COMRAM     2     0      2
                      _USART_PutChar
 ---------------------------------------------------------------------------------
 (2) _USART_PutChar                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_PutString
     _USART_PutChar
   _USART_init
     ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      12       1       19.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      20        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 19:01:49 2021

                      l40 097C                        l43 09D0                        l52 09B2  
                      l46 09E2                        l95 08BE                        l88 08AE  
                      u10 09DE                        u11 09DA                       l810 082C  
                     l820 086E                       l812 0842                       l734 09D0  
                     l822 088C                       l814 084A                       l830 092E  
                     l736 09DE                       l824 089C                       l816 0856  
                     l808 081C                       l840 0970                       l832 0968  
                     l826 089E                       l818 0864                       l850 097A  
                     l842 0972                       l834 096A                       l852 097E  
                     l828 08A8                       l844 0974                       l836 096C  
                     l860 08C0                       l854 0982                       l846 0976  
                     l838 096E                       l870 0904                       l862 08C4  
                     l856 0992                       l848 0978                       l872 0910  
                     l864 08D0                       l858 0996                       l866 08E2  
                     l868 08F2                       u100 0842                       u101 083E  
                     u110 0864                       u111 0860                       u120 088C  
                     u121 0888                       u130 095E                       u140 09B2  
                     u141 09AE                       u150 08E2                       u135 0954  
                     u151 08DE                       u160 0904                       u161 0900  
                     u177 091A                       _ISR 0008                       wreg 000FE8  
                    ?_ISR 0001            ?_USART_PutChar 0001                      STR_1 0801  
                    STR_2 080E                      i2l58 09CA                      _main 08C0  
 __end_of_USART_PutString 09B4                      btemp 0013                      start 000E  
            ___param_bank 000000                     ??_ISR 0001                     ?_main 0001  
         __end_of___lldiv 08C0                     i2l804 09B6                     i2l806 09C4  
                   _RCREG 000FAE                     _SPBRG 000FAF                     _TXREG 000FAD  
                   tablat 000FF5                     ttemp5 0014                     ttemp6 0017  
                   ttemp7 001B                     status 000FD8                     wtemp8 0014  
             ?_USART_init 000E           __initialization 09E4              __end_of_main 092E  
                  ??_main 0010             __activetblptr 000001           ??_USART_PutChar 0001  
                  _ADCON1 000FC1                    i2u9_40 09C4                    i2u9_41 09C0  
        ?_USART_PutString 0002                 ??___lldiv 0009                    isa$std 000001  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8       __size_of_USART_init 0050                __accesstop 0060  
 __end_of__initialization 09E6             ___rparam_used 000001            __pcstackCOMRAM 0001  
                 __Hparam 0000                   __Lparam 0000              ??_USART_init 0010  
                 ___lldiv 081C              __psmallconst 0800                   __pcinit 09E4  
                 __ramtop 0800                   __ptext0 08C0                   __ptext1 092E  
                 __ptext2 081C                   __ptext3 097E                   __ptext4 09CE  
            __size_of_ISR 09C6        __end_of_USART_init 097E            __pintcode_body 09B4  
    end_of_initialization 09E6                   int_func 09B4           ___lldiv@divisor 0005  
         ___lldiv@counter 000D                 _RCSTAbits 000FAB     __end_of_USART_PutChar 09E4  
               _TXSTAbits 000FAC  __size_of_USART_PutString 0036       start_initialization 09E4  
             __end_of_ISR 09CE               __pbssCOMRAM 0012        USART_PutString@str 0002  
               __pintcode 0008                  ?___lldiv 0001               __smallconst 0800  
       ??_USART_PutString 0004                  _PIE1bits 000F9D                  _PIR1bits 000F9E  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___lldiv 00A4                  _caracter 0012             __size_of_main 006E  
                isa$xinst 000000                  int$flags 0013    __size_of_USART_PutChar 0016  
              _INTCONbits 000FF2                  intlevel2 0000          ___lldiv@dividend 0001  
         USART_PutChar@Ch 0001        USART_init@baudrate 000E           _USART_PutString 097E  
        ___lldiv@quotient 0009             _USART_PutChar 09CE                _USART_init 092E  
