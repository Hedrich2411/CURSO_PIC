Version 4.0 HI-TECH Software Intermediate Code
"5 ./pid_control.h
[; ;./pid_control.h: 5: typedef struct{
[s S1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 ]
[n S1 . Kp Ki Kd LimMax LimMin integrador integradorAnterior errorAnterior derivador uT ]
"4 pid_control.c
[; ;pid_control.c: 4: void ControladorPID_init(ControladorPID*pid)
[v _ControladorPID_init `(v ~T0 @X0 1 ef1`*S1 ]
"5
[; ;pid_control.c: 5: {
{
[e :U _ControladorPID_init ]
"4
[; ;pid_control.c: 4: void ControladorPID_init(ControladorPID*pid)
[v _pid `*S1 ~T0 @X0 1 r1 ]
"5
[; ;pid_control.c: 5: {
[f ]
"6
[; ;pid_control.c: 6:     pid->integrador=0.0;
[e = . *U _pid 5 -> .0.0 `f ]
"7
[; ;pid_control.c: 7:     pid->errorAnterior=0.0;
[e = . *U _pid 7 -> .0.0 `f ]
"8
[; ;pid_control.c: 8:     pid->derivador=0.0;
[e = . *U _pid 8 -> .0.0 `f ]
"9
[; ;pid_control.c: 9:     pid->integradorAnterior=0.0;
[e = . *U _pid 6 -> .0.0 `f ]
"11
[; ;pid_control.c: 11: }
[e :UE 2 ]
}
"14
[; ;pid_control.c: 14: float CalculoControlPID(ControladorPID*pid,float setpoint,float medicion)
[v _CalculoControlPID `(f ~T0 @X0 1 ef3`*S1`f`f ]
"15
[; ;pid_control.c: 15: {
{
[e :U _CalculoControlPID ]
"14
[; ;pid_control.c: 14: float CalculoControlPID(ControladorPID*pid,float setpoint,float medicion)
[v _pid `*S1 ~T0 @X0 1 r1 ]
[v _setpoint `f ~T0 @X0 1 r2 ]
[v _medicion `f ~T0 @X0 1 r3 ]
"15
[; ;pid_control.c: 15: {
[f ]
"17
[; ;pid_control.c: 17:     float error=setpoint-medicion;
[v _error `f ~T0 @X0 1 a ]
[e = _error - _setpoint _medicion ]
"18
[; ;pid_control.c: 18:     float proporcional=pid->Kp*error;
[v _proporcional `f ~T0 @X0 1 a ]
[e = _proporcional * . *U _pid 0 _error ]
"19
[; ;pid_control.c: 19:     pid->integrador=pid->Ki*error+pid->integradorAnterior;
[e = . *U _pid 5 + * . *U _pid 1 _error . *U _pid 6 ]
"20
[; ;pid_control.c: 20:     pid->derivador=pid->Kd*(error-pid->errorAnterior);
[e = . *U _pid 8 * . *U _pid 2 - _error . *U _pid 7 ]
"21
[; ;pid_control.c: 21:     pid->uT=proporcional+pid->integrador+pid->derivador;
[e = . *U _pid 9 + + _proporcional . *U _pid 5 . *U _pid 8 ]
"23
[; ;pid_control.c: 23:     if(pid->uT>pid->LimMax){
[e $ ! > . *U _pid 9 . *U _pid 3 4  ]
{
"25
[; ;pid_control.c: 25:     pid->uT=pid->LimMax;
[e = . *U _pid 9 . *U _pid 3 ]
"27
[; ;pid_control.c: 27:     }else if(pid->uT<pid->LimMin){
}
[e $U 5  ]
[e :U 4 ]
[e $ ! < . *U _pid 9 . *U _pid 4 6  ]
{
"29
[; ;pid_control.c: 29:     pid->uT=pid->LimMin;
[e = . *U _pid 9 . *U _pid 4 ]
"31
[; ;pid_control.c: 31:     }
}
[e :U 6 ]
[e :U 5 ]
"32
[; ;pid_control.c: 32:     pid->integradorAnterior=pid->integrador;
[e = . *U _pid 6 . *U _pid 5 ]
"33
[; ;pid_control.c: 33:     pid->errorAnterior=error;
[e = . *U _pid 7 _error ]
"36
[; ;pid_control.c: 36:     return pid->uT;
[e ) . *U _pid 9 ]
[e $UE 3  ]
"38
[; ;pid_control.c: 38: }
[e :UE 3 ]
}
