

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 10 12:10:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _LATDbits	set	3980
    55  0000                     _INTCON3bits	set	4080
    56  0000                     _INTCONbits	set	4082
    57  0000                     _INTCON2bits	set	4081
    58  0000                     _TRISBbits	set	3987
    59  0000                     _TRISD	set	3989
    60  0000                     _ADCON1	set	4033
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  00012C                     __pcinit:
    66                           	callstack 0
    67  00012C                     start_initialization:
    68                           	callstack 0
    69  00012C                     __initialization:
    70                           	callstack 0
    71  00012C                     end_of_initialization:
    72                           	callstack 0
    73  00012C                     __end_of__initialization:
    74                           	callstack 0
    75  00012C  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  00012E  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  000130  0100               	movlb	0
    78  000132  EF5B  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81  000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83  000001                     ??_ISR:
    84                           
    85                           ; 1 bytes @ 0x0
    86  000001                     	ds	1
    87  000002                     config_interrup_cero@edge:
    88                           	callstack 0
    89  000002                     config_interrup_one@edge:
    90                           	callstack 0
    91  000002                     config_interrup_two@edge:
    92                           	callstack 0
    93                           
    94                           ; 1 bytes @ 0x1
    95  000002                     	ds	1
    96  000003                     config_all_interrup@edge_1:
    97                           	callstack 0
    98                           
    99                           ; 1 bytes @ 0x2
   100  000003                     	ds	1
   101  000004                     config_all_interrup@edge_2:
   102                           	callstack 0
   103                           
   104                           ; 1 bytes @ 0x3
   105  000004                     	ds	1
   106  000005                     config_all_interrup@edge_0:
   107                           	callstack 0
   108                           
   109                           ; 1 bytes @ 0x4
   110  000005                     	ds	1
   111  000006                     
   112                           ; 1 bytes @ 0x5
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 22 in file "main.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   132 ;;      Params:         0       0       0       0       0       0       0       0       0
   133 ;;      Locals:         0       0       0       0       0       0       0       0       0
   134 ;;      Temps:          0       0       0       0       0       0       0       0       0
   135 ;;      Totals:         0       0       0       0       0       0       0       0       0
   136 ;;Total ram usage:        0 bytes
   137 ;; Hardware stack levels required when called: 3
   138 ;; This function calls:
   139 ;;		_config_all_interrup
   140 ;; This function is called by:
   141 ;;		Startup code after reset
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           	psect	text0
   146  0000B6                     __ptext0:
   147                           	callstack 0
   148  0000B6                     _main:
   149                           	callstack 28
   150  0000B6                     
   151                           ;main.c: 25:     ADCON1 = 0x0F;
   152  0000B6  0E0F               	movlw	15
   153  0000B8  6EC1               	movwf	193,c	;volatile
   154                           
   155                           ;main.c: 27:     TRISD = 0;
   156  0000BA  0E00               	movlw	0
   157  0000BC  6E95               	movwf	149,c	;volatile
   158  0000BE                     
   159                           ;main.c: 28:     config_all_interrup(1,1,1);
   160  0000BE  0E01               	movlw	1
   161  0000C0  6E03               	movwf	config_all_interrup@edge_1^0,c
   162  0000C2  0E01               	movlw	1
   163  0000C4  6E04               	movwf	config_all_interrup@edge_2^0,c
   164  0000C6  0E01               	movlw	1
   165  0000C8  EC6A  F000         	call	_config_all_interrup
   166  0000CC                     l21:
   167  0000CC  EF66  F000         	goto	l21
   168  0000D0  EF07  F000         	goto	start
   169  0000D4                     __end_of_main:
   170                           	callstack 0
   171                           
   172 ;; *************** function _config_all_interrup *****************
   173 ;; Defined at:
   174 ;;		line 70 in file "main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;  edge_0          1    wreg     _Bool 
   177 ;;  edge_1          1    2[COMRAM] _Bool 
   178 ;;  edge_2          1    3[COMRAM] _Bool 
   179 ;; Auto vars:     Size  Location     Type
   180 ;;  edge_0          1    4[COMRAM] _Bool 
   181 ;; Return value:  Size  Location     Type
   182 ;;                  1    wreg      void 
   183 ;; Registers used:
   184 ;;		wreg, status,2, cstack
   185 ;; Tracked objects:
   186 ;;		On entry : 0/0
   187 ;;		On exit  : 0/0
   188 ;;		Unchanged: 0/0
   189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   190 ;;      Params:         2       0       0       0       0       0       0       0       0
   191 ;;      Locals:         1       0       0       0       0       0       0       0       0
   192 ;;      Temps:          0       0       0       0       0       0       0       0       0
   193 ;;      Totals:         3       0       0       0       0       0       0       0       0
   194 ;;Total ram usage:        3 bytes
   195 ;; Hardware stack levels used: 1
   196 ;; Hardware stack levels required when called: 2
   197 ;; This function calls:
   198 ;;		_config_interrup_cero
   199 ;;		_config_interrup_one
   200 ;;		_config_interrup_two
   201 ;; This function is called by:
   202 ;;		_main
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           	psect	text1
   207  0000D4                     __ptext1:
   208                           	callstack 0
   209  0000D4                     _config_all_interrup:
   210                           	callstack 28
   211                           
   212                           ;incstack = 0
   213                           ;config_all_interrup@edge_0 stored from wreg
   214  0000D4  6E05               	movwf	config_all_interrup@edge_0^0,c
   215  0000D6                     
   216                           ;main.c: 72:     config_interrup_cero(edge_0);
   217  0000D6  5005               	movf	config_all_interrup@edge_0^0,w,c
   218  0000D8  EC8B  F000         	call	_config_interrup_cero
   219                           
   220                           ;main.c: 73:     config_interrup_one(edge_1);
   221  0000DC  5003               	movf	config_all_interrup@edge_1^0,w,c
   222  0000DE  EC80  F000         	call	_config_interrup_one
   223                           
   224                           ;main.c: 74:     config_interrup_two(edge_2);
   225  0000E2  5004               	movf	config_all_interrup@edge_2^0,w,c
   226  0000E4  EC75  F000         	call	_config_interrup_two
   227  0000E8  0012               	return		;funcret
   228  0000EA                     __end_of_config_all_interrup:
   229                           	callstack 0
   230                           
   231 ;; *************** function _config_interrup_two *****************
   232 ;; Defined at:
   233 ;;		line 59 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;  edge            1    wreg     _Bool 
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  edge            1    1[COMRAM] _Bool 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         0       0       0       0       0       0       0       0       0
   248 ;;      Locals:         1       0       0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0
   250 ;;      Totals:         1       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        1 bytes
   252 ;; Hardware stack levels used: 1
   253 ;; Hardware stack levels required when called: 1
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		_config_all_interrup
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text2
   262  0000EA                     __ptext2:
   263                           	callstack 0
   264  0000EA                     _config_interrup_two:
   265                           	callstack 28
   266                           
   267                           ;incstack = 0
   268                           ;config_interrup_two@edge stored from wreg
   269  0000EA  6E02               	movwf	config_interrup_two@edge^0,c
   270  0000EC                     
   271                           ;main.c: 61:     TRISBbits.RB2 = 1;
   272  0000EC  8493               	bsf	147,2,c	;volatile
   273  0000EE                     
   274                           ;main.c: 62:     INTCON2bits.INTEDG2 = edge;
   275  0000EE  B002               	btfsc	config_interrup_two@edge^0,0,c
   276  0000F0  D002               	bra	u35
   277  0000F2  98F1               	bcf	241,4,c	;volatile
   278  0000F4  D001               	bra	u36
   279  0000F6                     u35:
   280  0000F6  88F1               	bsf	241,4,c	;volatile
   281  0000F8                     u36:
   282  0000F8                     
   283                           ;main.c: 63:     INTCON3bits.INT2IF = 0;
   284  0000F8  92F0               	bcf	240,1,c	;volatile
   285  0000FA                     
   286                           ;main.c: 64:     INTCON3bits.INT2IE = 1;
   287  0000FA  88F0               	bsf	240,4,c	;volatile
   288  0000FC                     
   289                           ;main.c: 65:     INTCONbits.GIE = 1;
   290  0000FC  8EF2               	bsf	242,7,c	;volatile
   291  0000FE  0012               	return		;funcret
   292  000100                     __end_of_config_interrup_two:
   293                           	callstack 0
   294                           
   295 ;; *************** function _config_interrup_one *****************
   296 ;; Defined at:
   297 ;;		line 50 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;  edge            1    wreg     _Bool 
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  edge            1    1[COMRAM] _Bool 
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   311 ;;      Params:         0       0       0       0       0       0       0       0       0
   312 ;;      Locals:         1       0       0       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0
   314 ;;      Totals:         1       0       0       0       0       0       0       0       0
   315 ;;Total ram usage:        1 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; Hardware stack levels required when called: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_config_all_interrup
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text3
   326  000100                     __ptext3:
   327                           	callstack 0
   328  000100                     _config_interrup_one:
   329                           	callstack 28
   330                           
   331                           ;incstack = 0
   332                           ;config_interrup_one@edge stored from wreg
   333  000100  6E02               	movwf	config_interrup_one@edge^0,c
   334  000102                     
   335                           ;main.c: 52:     TRISBbits.RB1 = 1;
   336  000102  8293               	bsf	147,1,c	;volatile
   337  000104                     
   338                           ;main.c: 53:     INTCON2bits.INTEDG1 = edge;
   339  000104  B002               	btfsc	config_interrup_one@edge^0,0,c
   340  000106  D002               	bra	u25
   341  000108  9AF1               	bcf	241,5,c	;volatile
   342  00010A  D001               	bra	u26
   343  00010C                     u25:
   344  00010C  8AF1               	bsf	241,5,c	;volatile
   345  00010E                     u26:
   346  00010E                     
   347                           ;main.c: 54:     INTCON3bits.INT1IF = 0;
   348  00010E  90F0               	bcf	240,0,c	;volatile
   349  000110                     
   350                           ;main.c: 55:     INTCON3bits.INT1IE = 1;
   351  000110  86F0               	bsf	240,3,c	;volatile
   352  000112                     
   353                           ;main.c: 56:     INTCONbits.GIE = 1;
   354  000112  8EF2               	bsf	242,7,c	;volatile
   355  000114  0012               	return		;funcret
   356  000116                     __end_of_config_interrup_one:
   357                           	callstack 0
   358                           
   359 ;; *************** function _config_interrup_cero *****************
   360 ;; Defined at:
   361 ;;		line 41 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  edge            1    wreg     _Bool 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  edge            1    1[COMRAM] _Bool 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   375 ;;      Params:         0       0       0       0       0       0       0       0       0
   376 ;;      Locals:         1       0       0       0       0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0       0       0
   378 ;;      Totals:         1       0       0       0       0       0       0       0       0
   379 ;;Total ram usage:        1 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; Hardware stack levels required when called: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_config_all_interrup
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text4
   390  000116                     __ptext4:
   391                           	callstack 0
   392  000116                     _config_interrup_cero:
   393                           	callstack 28
   394                           
   395                           ;incstack = 0
   396                           ;config_interrup_cero@edge stored from wreg
   397  000116  6E02               	movwf	config_interrup_cero@edge^0,c
   398  000118                     
   399                           ;main.c: 43:     TRISBbits.RB0 = 1;
   400  000118  8093               	bsf	147,0,c	;volatile
   401  00011A                     
   402                           ;main.c: 44:     INTCON2bits.INTEDG0 = edge;
   403  00011A  B002               	btfsc	config_interrup_cero@edge^0,0,c
   404  00011C  D002               	bra	u15
   405  00011E  9CF1               	bcf	241,6,c	;volatile
   406  000120  D001               	bra	u16
   407  000122                     u15:
   408  000122  8CF1               	bsf	241,6,c	;volatile
   409  000124                     u16:
   410  000124                     
   411                           ;main.c: 45:     INTCONbits.INT0IF = 0;
   412  000124  92F2               	bcf	242,1,c	;volatile
   413  000126                     
   414                           ;main.c: 46:     INTCONbits.INT0IE = 1;
   415  000126  88F2               	bsf	242,4,c	;volatile
   416  000128                     
   417                           ;main.c: 47:     INTCONbits.GIE = 1;
   418  000128  8EF2               	bsf	242,7,c	;volatile
   419  00012A  0012               	return		;funcret
   420  00012C                     __end_of_config_interrup_cero:
   421                           	callstack 0
   422                           
   423 ;; *************** function _ISR *****************
   424 ;; Defined at:
   425 ;;		line 79 in file "main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   439 ;;      Params:         0       0       0       0       0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		Interrupt level 2
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	intcode
   453  000008                     __pintcode:
   454                           	callstack 0
   455  000008                     _ISR:
   456                           	callstack 28
   457                           
   458                           ;incstack = 0
   459  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   460  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   461                           
   462                           	psect	intcode_body
   463  000012                     __pintcode_body:
   464                           	callstack 28
   465  000012                     int_func:
   466                           	callstack 28
   467  000012  0006               	pop		; remove dummy address from shadow register refresh
   468  000014                     
   469                           ;main.c: 82:     if(INTCONbits.INT0IF == 1){
   470  000014  A2F2               	btfss	242,1,c	;volatile
   471  000016  EF0F  F000         	goto	i2u4_41
   472  00001A  EF11  F000         	goto	i2u4_40
   473  00001E                     i2u4_41:
   474  00001E  EF24  F000         	goto	i2l41
   475  000022                     i2u4_40:
   476  000022                     
   477                           ;main.c: 84:         LATDbits.LATD0 = ~LATDbits.LATD0;
   478  000022  B08C               	btfsc	140,0,c	;volatile
   479  000024  EF16  F000         	goto	i2u5_41
   480  000028  EF19  F000         	goto	i2u5_40
   481  00002C                     i2u5_41:
   482  00002C  0E01               	movlw	1
   483  00002E  EF1A  F000         	goto	i2u5_46
   484  000032                     i2u5_40:
   485  000032  0E00               	movlw	0
   486  000034                     i2u5_46:
   487  000034  0AFF               	xorlw	255
   488  000036  6E01               	movwf	??_ISR^0,c
   489  000038  508C               	movf	140,w,c	;volatile
   490  00003A  1801               	xorwf	??_ISR^0,w,c
   491  00003C  0BFE               	andlw	-2
   492  00003E  1801               	xorwf	??_ISR^0,w,c
   493  000040  6E8C               	movwf	140,c	;volatile
   494  000042                     
   495                           ;main.c: 85:         INTCONbits.INT0IF = 0;
   496  000042  92F2               	bcf	242,1,c	;volatile
   497                           
   498                           ;main.c: 86:     }else if (INTCON3bits.INT1IF == 1){
   499  000044  EF59  F000         	goto	i2l46
   500  000048                     i2l41:
   501  000048  A0F0               	btfss	240,0,c	;volatile
   502  00004A  EF29  F000         	goto	i2u6_41
   503  00004E  EF2B  F000         	goto	i2u6_40
   504  000052                     i2u6_41:
   505  000052  EF3F  F000         	goto	i2l43
   506  000056                     i2u6_40:
   507  000056                     
   508                           ;main.c: 88:         LATDbits.LATD1 = ~LATDbits.LATD1;
   509  000056  B28C               	btfsc	140,1,c	;volatile
   510  000058  EF30  F000         	goto	i2u7_41
   511  00005C  EF33  F000         	goto	i2u7_40
   512  000060                     i2u7_41:
   513  000060  0E01               	movlw	1
   514  000062  EF34  F000         	goto	i2u7_46
   515  000066                     i2u7_40:
   516  000066  0E00               	movlw	0
   517  000068                     i2u7_46:
   518  000068  0AFF               	xorlw	255
   519  00006A  6E01               	movwf	??_ISR^0,c
   520  00006C  4601               	rlncf	??_ISR^0,f,c
   521  00006E  508C               	movf	140,w,c	;volatile
   522  000070  1801               	xorwf	??_ISR^0,w,c
   523  000072  0BFD               	andlw	-3
   524  000074  1801               	xorwf	??_ISR^0,w,c
   525  000076  6E8C               	movwf	140,c	;volatile
   526  000078                     
   527                           ;main.c: 89:         INTCON3bits.INT1IF = 0;
   528  000078  90F0               	bcf	240,0,c	;volatile
   529                           
   530                           ;main.c: 90:     }else if (INTCON3bits.INT2IF == 1){
   531  00007A  EF59  F000         	goto	i2l46
   532  00007E                     i2l43:
   533  00007E  A2F0               	btfss	240,1,c	;volatile
   534  000080  EF44  F000         	goto	i2u8_41
   535  000084  EF46  F000         	goto	i2u8_40
   536  000088                     i2u8_41:
   537  000088  EF59  F000         	goto	i2l46
   538  00008C                     i2u8_40:
   539  00008C                     
   540                           ;main.c: 92:         LATDbits.LATD2 = ~LATDbits.LATD2;
   541  00008C  B48C               	btfsc	140,2,c	;volatile
   542  00008E  EF4B  F000         	goto	i2u9_41
   543  000092  EF4E  F000         	goto	i2u9_40
   544  000096                     i2u9_41:
   545  000096  0E01               	movlw	1
   546  000098  EF4F  F000         	goto	i2u9_46
   547  00009C                     i2u9_40:
   548  00009C  0E00               	movlw	0
   549  00009E                     i2u9_46:
   550  00009E  0AFF               	xorlw	255
   551  0000A0  6E01               	movwf	??_ISR^0,c
   552  0000A2  4601               	rlncf	??_ISR^0,f,c
   553  0000A4  4601               	rlncf	??_ISR^0,f,c
   554  0000A6  508C               	movf	140,w,c	;volatile
   555  0000A8  1801               	xorwf	??_ISR^0,w,c
   556  0000AA  0BFB               	andlw	-5
   557  0000AC  1801               	xorwf	??_ISR^0,w,c
   558  0000AE  6E8C               	movwf	140,c	;volatile
   559  0000B0                     
   560                           ;main.c: 93:         INTCON3bits.INT2IF = 0;
   561  0000B0  92F0               	bcf	240,1,c	;volatile
   562  0000B2                     i2l46:
   563  0000B2  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   564  0000B4  0011               	retfie		f
   565  0000B6                     __end_of_ISR:
   566                           	callstack 0
   567  0000                     
   568                           	psect	rparam
   569  0000                     
   570                           	psect	temp
   571  000006                     btemp:
   572                           	callstack 0
   573  000006                     	ds	1
   574  0000                     int$flags	set	btemp
   575  0000                     wtemp8	set	btemp+1
   576  0000                     ttemp5	set	btemp+1
   577  0000                     ttemp6	set	btemp+4
   578  0000                     ttemp7	set	btemp+8
   579                           
   580                           	psect	idloc
   581                           
   582                           ;Config register IDLOC0 @ 0x200000
   583                           ;	unspecified, using default values
   584  200000                     	org	2097152
   585  200000  FF                 	db	255
   586                           
   587                           ;Config register IDLOC1 @ 0x200001
   588                           ;	unspecified, using default values
   589  200001                     	org	2097153
   590  200001  FF                 	db	255
   591                           
   592                           ;Config register IDLOC2 @ 0x200002
   593                           ;	unspecified, using default values
   594  200002                     	org	2097154
   595  200002  FF                 	db	255
   596                           
   597                           ;Config register IDLOC3 @ 0x200003
   598                           ;	unspecified, using default values
   599  200003                     	org	2097155
   600  200003  FF                 	db	255
   601                           
   602                           ;Config register IDLOC4 @ 0x200004
   603                           ;	unspecified, using default values
   604  200004                     	org	2097156
   605  200004  FF                 	db	255
   606                           
   607                           ;Config register IDLOC5 @ 0x200005
   608                           ;	unspecified, using default values
   609  200005                     	org	2097157
   610  200005  FF                 	db	255
   611                           
   612                           ;Config register IDLOC6 @ 0x200006
   613                           ;	unspecified, using default values
   614  200006                     	org	2097158
   615  200006  FF                 	db	255
   616                           
   617                           ;Config register IDLOC7 @ 0x200007
   618                           ;	unspecified, using default values
   619  200007                     	org	2097159
   620  200007  FF                 	db	255
   621                           
   622                           	psect	config
   623                           
   624                           ;Config register CONFIG1L @ 0x300000
   625                           ;	PLL Prescaler Selection bits
   626                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   627                           ;	System Clock Postscaler Selection bits
   628                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   629                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   630                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   631  300000                     	org	3145728
   632  300000  00                 	db	0
   633                           
   634                           ;Config register CONFIG1H @ 0x300001
   635                           ;	Oscillator Selection bits
   636                           ;	FOSC = HS, HS oscillator (HS)
   637                           ;	Fail-Safe Clock Monitor Enable bit
   638                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   639                           ;	Internal/External Oscillator Switchover bit
   640                           ;	IESO = OFF, Oscillator Switchover mode disabled
   641  300001                     	org	3145729
   642  300001  0C                 	db	12
   643                           
   644                           ;Config register CONFIG2L @ 0x300002
   645                           ;	Power-up Timer Enable bit
   646                           ;	PWRT = OFF, PWRT disabled
   647                           ;	Brown-out Reset Enable bits
   648                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   649                           ;	Brown-out Reset Voltage bits
   650                           ;	BORV = 3, Minimum setting 2.05V
   651                           ;	USB Voltage Regulator Enable bit
   652                           ;	VREGEN = OFF, USB voltage regulator disabled
   653  300002                     	org	3145730
   654  300002  19                 	db	25
   655                           
   656                           ;Config register CONFIG2H @ 0x300003
   657                           ;	Watchdog Timer Enable bit
   658                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   659                           ;	Watchdog Timer Postscale Select bits
   660                           ;	WDTPS = 32768, 1:32768
   661  300003                     	org	3145731
   662  300003  1E                 	db	30
   663                           
   664                           ; Padding undefined space
   665  300004                     	org	3145732
   666  300004  FF                 	db	255
   667                           
   668                           ;Config register CONFIG3H @ 0x300005
   669                           ;	CCP2 MUX bit
   670                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   671                           ;	PORTB A/D Enable bit
   672                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   673                           ;	Low-Power Timer 1 Oscillator Enable bit
   674                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   675                           ;	MCLR Pin Enable bit
   676                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   677  300005                     	org	3145733
   678  300005  83                 	db	131
   679                           
   680                           ;Config register CONFIG4L @ 0x300006
   681                           ;	Stack Full/Underflow Reset Enable bit
   682                           ;	STVREN = ON, Stack full/underflow will cause Reset
   683                           ;	Single-Supply ICSP Enable bit
   684                           ;	LVP = ON, Single-Supply ICSP enabled
   685                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   686                           ;	ICPRT = OFF, ICPORT disabled
   687                           ;	Extended Instruction Set Enable bit
   688                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   689                           ;	Background Debugger Enable bit
   690                           ;	DEBUG = 0x1, unprogrammed default
   691  300006                     	org	3145734
   692  300006  85                 	db	133
   693                           
   694                           ; Padding undefined space
   695  300007                     	org	3145735
   696  300007  FF                 	db	255
   697                           
   698                           ;Config register CONFIG5L @ 0x300008
   699                           ;	Code Protection bit
   700                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   701                           ;	Code Protection bit
   702                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   703                           ;	Code Protection bit
   704                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   705                           ;	Code Protection bit
   706                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   707  300008                     	org	3145736
   708  300008  0F                 	db	15
   709                           
   710                           ;Config register CONFIG5H @ 0x300009
   711                           ;	Boot Block Code Protection bit
   712                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   713                           ;	Data EEPROM Code Protection bit
   714                           ;	CPD = OFF, Data EEPROM is not code-protected
   715  300009                     	org	3145737
   716  300009  C0                 	db	192
   717                           
   718                           ;Config register CONFIG6L @ 0x30000A
   719                           ;	Write Protection bit
   720                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   721                           ;	Write Protection bit
   722                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   723                           ;	Write Protection bit
   724                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   725                           ;	Write Protection bit
   726                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   727  30000A                     	org	3145738
   728  30000A  0F                 	db	15
   729                           
   730                           ;Config register CONFIG6H @ 0x30000B
   731                           ;	Configuration Register Write Protection bit
   732                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   733                           ;	Boot Block Write Protection bit
   734                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   735                           ;	Data EEPROM Write Protection bit
   736                           ;	WRTD = OFF, Data EEPROM is not write-protected
   737  30000B                     	org	3145739
   738  30000B  E0                 	db	224
   739                           
   740                           ;Config register CONFIG7L @ 0x30000C
   741                           ;	Table Read Protection bit
   742                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   743                           ;	Table Read Protection bit
   744                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   745                           ;	Table Read Protection bit
   746                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   747                           ;	Table Read Protection bit
   748                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   749  30000C                     	org	3145740
   750  30000C  0F                 	db	15
   751                           
   752                           ;Config register CONFIG7H @ 0x30000D
   753                           ;	Boot Block Table Read Protection bit
   754                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   755  30000D                     	org	3145741
   756  30000D  40                 	db	64
   757                           tosu	equ	0xFFF
   758                           tosh	equ	0xFFE
   759                           tosl	equ	0xFFD
   760                           stkptr	equ	0xFFC
   761                           pclatu	equ	0xFFB
   762                           pclath	equ	0xFFA
   763                           pcl	equ	0xFF9
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           prodh	equ	0xFF4
   769                           prodl	equ	0xFF3
   770                           indf0	equ	0xFEF
   771                           postinc0	equ	0xFEE
   772                           postdec0	equ	0xFED
   773                           preinc0	equ	0xFEC
   774                           plusw0	equ	0xFEB
   775                           fsr0h	equ	0xFEA
   776                           fsr0l	equ	0xFE9
   777                           wreg	equ	0xFE8
   778                           indf1	equ	0xFE7
   779                           postinc1	equ	0xFE6
   780                           postdec1	equ	0xFE5
   781                           preinc1	equ	0xFE4
   782                           plusw1	equ	0xFE3
   783                           fsr1h	equ	0xFE2
   784                           fsr1l	equ	0xFE1
   785                           bsr	equ	0xFE0
   786                           indf2	equ	0xFDF
   787                           postinc2	equ	0xFDE
   788                           postdec2	equ	0xFDD
   789                           preinc2	equ	0xFDC
   790                           plusw2	equ	0xFDB
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_config_all_interrup
    _config_all_interrup->_config_interrup_cero
    _config_all_interrup->_config_interrup_one
    _config_all_interrup->_config_interrup_two

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     263
                _config_all_interrup
 ---------------------------------------------------------------------------------
 (1) _config_all_interrup                                  3     1      2     263
                                              2 COMRAM     3     1      2
               _config_interrup_cero
                _config_interrup_one
                _config_interrup_two
 ---------------------------------------------------------------------------------
 (2) _config_interrup_two                                  1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_interrup_one                                  1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_interrup_cero                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_all_interrup
     _config_interrup_cero
     _config_interrup_one
     _config_interrup_two

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 10 12:10:37 2021

          _config_all_interrup 00D4                             l21 00CC                             l30 0114  
                           l22 00CC                             l33 00FE                             l27 012A  
                           l36 00E8                             u15 0122                             u16 0124  
                           u25 010C                             u26 010E                             u35 00F6  
                           u36 00F8                            l730 0128                            l722 0118  
                          l724 011A                            l740 0112                            l732 0102  
                          l726 0124                            l734 0104                            l750 00FC  
                          l742 00EC                            l728 0126                            l736 010E  
                          l744 00EE                            l738 0110                            l746 00F8  
                          l748 00FA                            l772 00D6                            l774 00B6  
                          l776 00BE                            _ISR 0008           ?_config_all_interrup 0003  
       ??_config_interrup_cero 0002                           ?_ISR 0001                           i2l41 0048  
                         i2l43 007E                           i2l46 00B2                           _main 00B6  
                         btemp 0006                           start 000E                   ___param_bank 000000  
                        ??_ISR 0001                          ?_main 0001                          i2l760 0022  
                        i2l770 00B0                          i2l762 0042                          i2l764 0056  
                        i2l766 0078                          i2l758 0014                          i2l768 008C  
                        _TRISD 000F95          ??_config_all_interrup 0005                          ttemp5 0007  
                        ttemp6 000A                          ttemp7 000E                          wtemp8 0007  
      config_interrup_one@edge 0002                __initialization 012C                   __end_of_main 00D4  
      config_interrup_two@edge 0002                         ??_main 0006                  __activetblptr 000000  
    config_all_interrup@edge_0 0005      config_all_interrup@edge_1 0003      config_all_interrup@edge_2 0004  
                       _ADCON1 000FC1                         i2u4_40 0022                         i2u4_41 001E  
                       i2u5_40 0032                         i2u5_41 002C                         i2u5_46 0034  
                       i2u6_40 0056                         i2u6_41 0052                         i2u7_40 0066  
                       i2u7_41 0060                         i2u7_46 0068                         i2u8_40 008C  
                       i2u8_41 0088                         i2u9_40 009C                         i2u9_41 0096  
                       i2u9_46 009E   __size_of_config_interrup_one 0016   __size_of_config_interrup_two 0016  
     config_interrup_cero@edge 0002                         isa$std 000001                     __accesstop 0060  
      __end_of__initialization 012C                  ___rparam_used 000001                 __pcstackCOMRAM 0001  
__size_of_config_interrup_cero 0016                        __Hparam 0000                        __Lparam 0000  
                      __pcinit 012C                        __ramtop 0800    __end_of_config_all_interrup 00EA  
                      __ptext0 00B6                        __ptext1 00D4                        __ptext2 00EA  
                      __ptext3 0100                        __ptext4 0116                   __size_of_ISR 00AE  
          _config_interrup_one 0100            _config_interrup_two 00EA                 __pintcode_body 0012  
         end_of_initialization 012C                        int_func 0012           ?_config_interrup_one 0001  
         ?_config_interrup_two 0001                      _TRISBbits 000F93          ??_config_interrup_one 0002  
        ??_config_interrup_two 0002            start_initialization 012C                    __end_of_ISR 00B6  
                    __pintcode 0008   __end_of_config_interrup_cero 012C                       _LATDbits 000F8C  
 __size_of_config_all_interrup 0016                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                     __Hrparam 0000                       __Lrparam 0000    __end_of_config_interrup_one 0116  
  __end_of_config_interrup_two 0100           _config_interrup_cero 0116                  __size_of_main 001E  
                     isa$xinst 000000                       int$flags 0006                     _INTCONbits 000FF2  
        ?_config_interrup_cero 0001                       intlevel2 0000  
